// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message/rpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RpcMessage {

  /// <summary>Holder for reflection information generated from Message/rpc.proto</summary>
  public static partial class RpcReflection {

    #region Descriptor
    /// <summary>File descriptor for Message/rpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFNZXNzYWdlL3JwYy5wcm90bxIKUnBjTWVzc2FnZSLSAQoKUmVxdWVzdFJw",
            "YxISCgphY3Rvcl90eXBlGAEgASgJEhAKCGFjdG9yX2lkGAIgASgJEg4KBm1l",
            "dGhvZBgDIAEoCRIMCgRhcmdzGAQgASgMEhMKC25lZWRfcmVzdWx0GAUgASgI",
            "EhYKDmRlc3Rfc2VydmVyX2lkGAYgASgQEhIKCnNyY19zZXJ2ZXIYCiABKBAS",
            "FgoOc3JjX3JlcXVlc3RfaWQYCyABKBASEgoKcmVxdWVzdF9pZBgMIAEoEBIT",
            "CgtyZXNwb25zZV9pZBgNIAEoECKYAQoLUmVzcG9uc2VScGMSJwoHcmVxdWVz",
            "dBgBIAEoCzIWLlJwY01lc3NhZ2UuUmVxdWVzdFJwYxISCgpyZXF1ZXN0X2lk",
            "GAogASgQEhMKC3Jlc3BvbnNlX2lkGAsgASgQEhIKCmVycm9yX2NvZGUYDCAB",
            "KAUSEQoJZXJyb3JfbXNnGA0gASgJEhAKCHJlc3BvbnNlGA4gASgMIiwKE1Jl",
            "cXVlc3RScGNIZWFydEJlYXQSFQoNbWlsbGlfc2Vjb25kcxgBIAEoECItChRS",
            "ZXNwb25zZVJwY0hlYXJ0QmVhdBIVCg1taWxsaV9zZWNvbmRzGAEgASgQYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RpcMessage.RequestRpc), global::RpcMessage.RequestRpc.Parser, new[]{ "ActorType", "ActorId", "Method", "Args", "NeedResult", "DestServerId", "SrcServer", "SrcRequestId", "RequestId", "ResponseId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RpcMessage.ResponseRpc), global::RpcMessage.ResponseRpc.Parser, new[]{ "Request", "RequestId", "ResponseId", "ErrorCode", "ErrorMsg", "Response" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RpcMessage.RequestRpcHeartBeat), global::RpcMessage.RequestRpcHeartBeat.Parser, new[]{ "MilliSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RpcMessage.ResponseRpcHeartBeat), global::RpcMessage.ResponseRpcHeartBeat.Parser, new[]{ "MilliSeconds" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestRpc : pb::IMessage<RequestRpc> {
    private static readonly pb::MessageParser<RequestRpc> _parser = new pb::MessageParser<RequestRpc>(() => new RequestRpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestRpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RpcMessage.RpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRpc(RequestRpc other) : this() {
      actorType_ = other.actorType_;
      actorId_ = other.actorId_;
      method_ = other.method_;
      args_ = other.args_;
      needResult_ = other.needResult_;
      destServerId_ = other.destServerId_;
      srcServer_ = other.srcServer_;
      srcRequestId_ = other.srcRequestId_;
      requestId_ = other.requestId_;
      responseId_ = other.responseId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRpc Clone() {
      return new RequestRpc(this);
    }

    /// <summary>Field number for the "actor_type" field.</summary>
    public const int ActorTypeFieldNumber = 1;
    private string actorType_ = "";
    /// <summary>
    ///actor的接口类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActorType {
      get { return actorType_; }
      set {
        actorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "actor_id" field.</summary>
    public const int ActorIdFieldNumber = 2;
    private string actorId_ = "";
    /// <summary>
    ///该ID不要包含actor_type和domain信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActorId {
      get { return actorId_; }
      set {
        actorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 3;
    private string method_ = "";
    /// <summary>
    ///函数名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 4;
    private pb::ByteString args_ = pb::ByteString.Empty;
    /// <summary>
    ///收入参数(序列化暂时还未想好)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Args {
      get { return args_; }
      set {
        args_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "need_result" field.</summary>
    public const int NeedResultFieldNumber = 5;
    private bool needResult_;
    /// <summary>
    ///是否需要返回值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeedResult {
      get { return needResult_; }
      set {
        needResult_ = value;
      }
    }

    /// <summary>Field number for the "dest_server_id" field.</summary>
    public const int DestServerIdFieldNumber = 6;
    private long destServerId_;
    /// <summary>
    ///目标服务器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DestServerId {
      get { return destServerId_; }
      set {
        destServerId_ = value;
      }
    }

    /// <summary>Field number for the "src_server" field.</summary>
    public const int SrcServerFieldNumber = 10;
    private long srcServer_;
    /// <summary>
    ///ServerID, TraceID两个组合起来决定了Request的可重入性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SrcServer {
      get { return srcServer_; }
      set {
        srcServer_ = value;
      }
    }

    /// <summary>Field number for the "src_request_id" field.</summary>
    public const int SrcRequestIdFieldNumber = 11;
    private long srcRequestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SrcRequestId {
      get { return srcRequestId_; }
      set {
        srcRequestId_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 12;
    private long requestId_;
    /// <summary>
    ///proxy call的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "response_id" field.</summary>
    public const int ResponseIdFieldNumber = 13;
    private long responseId_;
    /// <summary>
    ///req/resp的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ResponseId {
      get { return responseId_; }
      set {
        responseId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestRpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestRpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActorType != other.ActorType) return false;
      if (ActorId != other.ActorId) return false;
      if (Method != other.Method) return false;
      if (Args != other.Args) return false;
      if (NeedResult != other.NeedResult) return false;
      if (DestServerId != other.DestServerId) return false;
      if (SrcServer != other.SrcServer) return false;
      if (SrcRequestId != other.SrcRequestId) return false;
      if (RequestId != other.RequestId) return false;
      if (ResponseId != other.ResponseId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActorType.Length != 0) hash ^= ActorType.GetHashCode();
      if (ActorId.Length != 0) hash ^= ActorId.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Args.Length != 0) hash ^= Args.GetHashCode();
      if (NeedResult != false) hash ^= NeedResult.GetHashCode();
      if (DestServerId != 0L) hash ^= DestServerId.GetHashCode();
      if (SrcServer != 0L) hash ^= SrcServer.GetHashCode();
      if (SrcRequestId != 0L) hash ^= SrcRequestId.GetHashCode();
      if (RequestId != 0L) hash ^= RequestId.GetHashCode();
      if (ResponseId != 0L) hash ^= ResponseId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActorType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActorType);
      }
      if (ActorId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActorId);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Method);
      }
      if (Args.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Args);
      }
      if (NeedResult != false) {
        output.WriteRawTag(40);
        output.WriteBool(NeedResult);
      }
      if (DestServerId != 0L) {
        output.WriteRawTag(49);
        output.WriteSFixed64(DestServerId);
      }
      if (SrcServer != 0L) {
        output.WriteRawTag(81);
        output.WriteSFixed64(SrcServer);
      }
      if (SrcRequestId != 0L) {
        output.WriteRawTag(89);
        output.WriteSFixed64(SrcRequestId);
      }
      if (RequestId != 0L) {
        output.WriteRawTag(97);
        output.WriteSFixed64(RequestId);
      }
      if (ResponseId != 0L) {
        output.WriteRawTag(105);
        output.WriteSFixed64(ResponseId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActorType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActorType);
      }
      if (ActorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActorId);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Args.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Args);
      }
      if (NeedResult != false) {
        size += 1 + 1;
      }
      if (DestServerId != 0L) {
        size += 1 + 8;
      }
      if (SrcServer != 0L) {
        size += 1 + 8;
      }
      if (SrcRequestId != 0L) {
        size += 1 + 8;
      }
      if (RequestId != 0L) {
        size += 1 + 8;
      }
      if (ResponseId != 0L) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestRpc other) {
      if (other == null) {
        return;
      }
      if (other.ActorType.Length != 0) {
        ActorType = other.ActorType;
      }
      if (other.ActorId.Length != 0) {
        ActorId = other.ActorId;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Args.Length != 0) {
        Args = other.Args;
      }
      if (other.NeedResult != false) {
        NeedResult = other.NeedResult;
      }
      if (other.DestServerId != 0L) {
        DestServerId = other.DestServerId;
      }
      if (other.SrcServer != 0L) {
        SrcServer = other.SrcServer;
      }
      if (other.SrcRequestId != 0L) {
        SrcRequestId = other.SrcRequestId;
      }
      if (other.RequestId != 0L) {
        RequestId = other.RequestId;
      }
      if (other.ResponseId != 0L) {
        ResponseId = other.ResponseId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActorType = input.ReadString();
            break;
          }
          case 18: {
            ActorId = input.ReadString();
            break;
          }
          case 26: {
            Method = input.ReadString();
            break;
          }
          case 34: {
            Args = input.ReadBytes();
            break;
          }
          case 40: {
            NeedResult = input.ReadBool();
            break;
          }
          case 49: {
            DestServerId = input.ReadSFixed64();
            break;
          }
          case 81: {
            SrcServer = input.ReadSFixed64();
            break;
          }
          case 89: {
            SrcRequestId = input.ReadSFixed64();
            break;
          }
          case 97: {
            RequestId = input.ReadSFixed64();
            break;
          }
          case 105: {
            ResponseId = input.ReadSFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseRpc : pb::IMessage<ResponseRpc> {
    private static readonly pb::MessageParser<ResponseRpc> _parser = new pb::MessageParser<ResponseRpc>(() => new ResponseRpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseRpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RpcMessage.RpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRpc(ResponseRpc other) : this() {
      request_ = other.request_ != null ? other.request_.Clone() : null;
      requestId_ = other.requestId_;
      responseId_ = other.responseId_;
      errorCode_ = other.errorCode_;
      errorMsg_ = other.errorMsg_;
      response_ = other.response_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRpc Clone() {
      return new ResponseRpc(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private global::RpcMessage.RequestRpc request_;
    /// <summary>
    ///失败的时候会携带这个信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RpcMessage.RequestRpc Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 10;
    private long requestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    /// <summary>Field number for the "response_id" field.</summary>
    public const int ResponseIdFieldNumber = 11;
    private long responseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ResponseId {
      get { return responseId_; }
      set {
        responseId_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 12;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_msg" field.</summary>
    public const int ErrorMsgFieldNumber = 13;
    private string errorMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMsg {
      get { return errorMsg_; }
      set {
        errorMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 14;
    private pb::ByteString response_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Response {
      get { return response_; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseRpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseRpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (RequestId != other.RequestId) return false;
      if (ResponseId != other.ResponseId) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMsg != other.ErrorMsg) return false;
      if (Response != other.Response) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (request_ != null) hash ^= Request.GetHashCode();
      if (RequestId != 0L) hash ^= RequestId.GetHashCode();
      if (ResponseId != 0L) hash ^= ResponseId.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMsg.Length != 0) hash ^= ErrorMsg.GetHashCode();
      if (Response.Length != 0) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (RequestId != 0L) {
        output.WriteRawTag(81);
        output.WriteSFixed64(RequestId);
      }
      if (ResponseId != 0L) {
        output.WriteRawTag(89);
        output.WriteSFixed64(ResponseId);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorMsg.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ErrorMsg);
      }
      if (Response.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (RequestId != 0L) {
        size += 1 + 8;
      }
      if (ResponseId != 0L) {
        size += 1 + 8;
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMsg);
      }
      if (Response.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseRpc other) {
      if (other == null) {
        return;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::RpcMessage.RequestRpc();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.RequestId != 0L) {
        RequestId = other.RequestId;
      }
      if (other.ResponseId != 0L) {
        ResponseId = other.ResponseId;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMsg.Length != 0) {
        ErrorMsg = other.ErrorMsg;
      }
      if (other.Response.Length != 0) {
        Response = other.Response;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::RpcMessage.RequestRpc();
            }
            input.ReadMessage(Request);
            break;
          }
          case 81: {
            RequestId = input.ReadSFixed64();
            break;
          }
          case 89: {
            ResponseId = input.ReadSFixed64();
            break;
          }
          case 96: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 106: {
            ErrorMsg = input.ReadString();
            break;
          }
          case 114: {
            Response = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestRpcHeartBeat : pb::IMessage<RequestRpcHeartBeat> {
    private static readonly pb::MessageParser<RequestRpcHeartBeat> _parser = new pb::MessageParser<RequestRpcHeartBeat>(() => new RequestRpcHeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestRpcHeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RpcMessage.RpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRpcHeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRpcHeartBeat(RequestRpcHeartBeat other) : this() {
      milliSeconds_ = other.milliSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRpcHeartBeat Clone() {
      return new RequestRpcHeartBeat(this);
    }

    /// <summary>Field number for the "milli_seconds" field.</summary>
    public const int MilliSecondsFieldNumber = 1;
    private long milliSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MilliSeconds {
      get { return milliSeconds_; }
      set {
        milliSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestRpcHeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestRpcHeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MilliSeconds != other.MilliSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MilliSeconds != 0L) hash ^= MilliSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MilliSeconds != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(MilliSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MilliSeconds != 0L) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestRpcHeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.MilliSeconds != 0L) {
        MilliSeconds = other.MilliSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MilliSeconds = input.ReadSFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseRpcHeartBeat : pb::IMessage<ResponseRpcHeartBeat> {
    private static readonly pb::MessageParser<ResponseRpcHeartBeat> _parser = new pb::MessageParser<ResponseRpcHeartBeat>(() => new ResponseRpcHeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseRpcHeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RpcMessage.RpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRpcHeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRpcHeartBeat(ResponseRpcHeartBeat other) : this() {
      milliSeconds_ = other.milliSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseRpcHeartBeat Clone() {
      return new ResponseRpcHeartBeat(this);
    }

    /// <summary>Field number for the "milli_seconds" field.</summary>
    public const int MilliSecondsFieldNumber = 1;
    private long milliSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MilliSeconds {
      get { return milliSeconds_; }
      set {
        milliSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseRpcHeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseRpcHeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MilliSeconds != other.MilliSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MilliSeconds != 0L) hash ^= MilliSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MilliSeconds != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(MilliSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MilliSeconds != 0L) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseRpcHeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.MilliSeconds != 0L) {
        MilliSeconds = other.MilliSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MilliSeconds = input.ReadSFixed64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
