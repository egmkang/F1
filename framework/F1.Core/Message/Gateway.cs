// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message/gateway.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GatewayMessage {

  /// <summary>Holder for reflection information generated from Message/gateway.proto</summary>
  public static partial class GatewayReflection {

    #region Descriptor
    /// <summary>File descriptor for Message/gateway.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GatewayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVNZXNzYWdlL2dhdGV3YXkucHJvdG8SDkdhdGV3YXlNZXNzYWdlIigKEFJl",
            "cXVlc3RIZWFydEJlYXQSFAoMbWlsbGlfc2Vjb25kGAEgASgQIikKEVJlc3Bv",
            "bnNlSGVhcnRCZWF0EhQKDG1pbGxpX3NlY29uZBgBIAEoECJkChZOb3RpZnlD",
            "b25uZWN0aW9uQ29taW5nEhQKDHNlcnZpY2VfdHlwZRgBIAEoCRISCgpzZXNz",
            "aW9uX2lkGAIgASgQEhEKCXBsYXllcl9pZBgEIAEoCRINCgV0b2tlbhgFIAEo",
            "DCJDChdOb3RpZnlDb25uZWN0aW9uQWJvcnRlZBISCgpzZXNzaW9uX2lkGAEg",
            "ASgQEhQKDHNlcnZpY2VfdHlwZRgCIAEoCSJCChZSZXF1ZXN0Q2xvc2VDb25u",
            "ZWN0aW9uEhIKCnNlc3Npb25faWQYASABKBASFAoMc2VydmljZV90eXBlGAIg",
            "ASgJIkkKEE5vdGlmeU5ld01lc3NhZ2USEgoKc2Vzc2lvbl9pZBgBIAEoEBIU",
            "CgxzZXJ2aWNlX3R5cGUYAiABKAkSCwoDbXNnGAMgASgMIj4KGlJlcXVlc3RT",
            "ZW5kTWVzc2FnZVRvUGxheWVyEhMKC3Nlc3Npb25faWRzGAEgAygQEgsKA21z",
            "ZxgCIAEoDGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayMessage.RequestHeartBeat), global::GatewayMessage.RequestHeartBeat.Parser, new[]{ "MilliSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayMessage.ResponseHeartBeat), global::GatewayMessage.ResponseHeartBeat.Parser, new[]{ "MilliSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayMessage.NotifyConnectionComing), global::GatewayMessage.NotifyConnectionComing.Parser, new[]{ "ServiceType", "SessionId", "PlayerId", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayMessage.NotifyConnectionAborted), global::GatewayMessage.NotifyConnectionAborted.Parser, new[]{ "SessionId", "ServiceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayMessage.RequestCloseConnection), global::GatewayMessage.RequestCloseConnection.Parser, new[]{ "SessionId", "ServiceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayMessage.NotifyNewMessage), global::GatewayMessage.NotifyNewMessage.Parser, new[]{ "SessionId", "ServiceType", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GatewayMessage.RequestSendMessageToPlayer), global::GatewayMessage.RequestSendMessageToPlayer.Parser, new[]{ "SessionIds", "Msg" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///心跳
  /// </summary>
  public sealed partial class RequestHeartBeat : pb::IMessage<RequestHeartBeat> {
    private static readonly pb::MessageParser<RequestHeartBeat> _parser = new pb::MessageParser<RequestHeartBeat>(() => new RequestHeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestHeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayMessage.GatewayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeartBeat(RequestHeartBeat other) : this() {
      milliSecond_ = other.milliSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeartBeat Clone() {
      return new RequestHeartBeat(this);
    }

    /// <summary>Field number for the "milli_second" field.</summary>
    public const int MilliSecondFieldNumber = 1;
    private long milliSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MilliSecond {
      get { return milliSecond_; }
      set {
        milliSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestHeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestHeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MilliSecond != other.MilliSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MilliSecond != 0L) hash ^= MilliSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MilliSecond != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(MilliSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MilliSecond != 0L) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestHeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.MilliSecond != 0L) {
        MilliSecond = other.MilliSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MilliSecond = input.ReadSFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseHeartBeat : pb::IMessage<ResponseHeartBeat> {
    private static readonly pb::MessageParser<ResponseHeartBeat> _parser = new pb::MessageParser<ResponseHeartBeat>(() => new ResponseHeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseHeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayMessage.GatewayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeartBeat(ResponseHeartBeat other) : this() {
      milliSecond_ = other.milliSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeartBeat Clone() {
      return new ResponseHeartBeat(this);
    }

    /// <summary>Field number for the "milli_second" field.</summary>
    public const int MilliSecondFieldNumber = 1;
    private long milliSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MilliSecond {
      get { return milliSecond_; }
      set {
        milliSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseHeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseHeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MilliSecond != other.MilliSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MilliSecond != 0L) hash ^= MilliSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MilliSecond != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(MilliSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MilliSecond != 0L) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseHeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.MilliSecond != 0L) {
        MilliSecond = other.MilliSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MilliSecond = input.ReadSFixed64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///1. 新链接
  ///2. 链接断开
  ///3. 关闭链接
  /// </summary>
  public sealed partial class NotifyConnectionComing : pb::IMessage<NotifyConnectionComing> {
    private static readonly pb::MessageParser<NotifyConnectionComing> _parser = new pb::MessageParser<NotifyConnectionComing>(() => new NotifyConnectionComing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyConnectionComing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayMessage.GatewayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyConnectionComing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyConnectionComing(NotifyConnectionComing other) : this() {
      serviceType_ = other.serviceType_;
      sessionId_ = other.sessionId_;
      playerId_ = other.playerId_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyConnectionComing Clone() {
      return new NotifyConnectionComing(this);
    }

    /// <summary>Field number for the "service_type" field.</summary>
    public const int ServiceTypeFieldNumber = 1;
    private string serviceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceType {
      get { return serviceType_; }
      set {
        serviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private long sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 4;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 5;
    private pb::ByteString token_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyConnectionComing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyConnectionComing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceType != other.ServiceType) return false;
      if (SessionId != other.SessionId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceType.Length != 0) hash ^= ServiceType.GetHashCode();
      if (SessionId != 0L) hash ^= SessionId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceType);
      }
      if (SessionId != 0L) {
        output.WriteRawTag(17);
        output.WriteSFixed64(SessionId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceType);
      }
      if (SessionId != 0L) {
        size += 1 + 8;
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyConnectionComing other) {
      if (other == null) {
        return;
      }
      if (other.ServiceType.Length != 0) {
        ServiceType = other.ServiceType;
      }
      if (other.SessionId != 0L) {
        SessionId = other.SessionId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceType = input.ReadString();
            break;
          }
          case 17: {
            SessionId = input.ReadSFixed64();
            break;
          }
          case 34: {
            PlayerId = input.ReadString();
            break;
          }
          case 42: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotifyConnectionAborted : pb::IMessage<NotifyConnectionAborted> {
    private static readonly pb::MessageParser<NotifyConnectionAborted> _parser = new pb::MessageParser<NotifyConnectionAborted>(() => new NotifyConnectionAborted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyConnectionAborted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayMessage.GatewayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyConnectionAborted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyConnectionAborted(NotifyConnectionAborted other) : this() {
      sessionId_ = other.sessionId_;
      serviceType_ = other.serviceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyConnectionAborted Clone() {
      return new NotifyConnectionAborted(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private long sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "service_type" field.</summary>
    public const int ServiceTypeFieldNumber = 2;
    private string serviceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceType {
      get { return serviceType_; }
      set {
        serviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyConnectionAborted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyConnectionAborted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (ServiceType != other.ServiceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0L) hash ^= SessionId.GetHashCode();
      if (ServiceType.Length != 0) hash ^= ServiceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(SessionId);
      }
      if (ServiceType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0L) {
        size += 1 + 8;
      }
      if (ServiceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyConnectionAborted other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0L) {
        SessionId = other.SessionId;
      }
      if (other.ServiceType.Length != 0) {
        ServiceType = other.ServiceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SessionId = input.ReadSFixed64();
            break;
          }
          case 18: {
            ServiceType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestCloseConnection : pb::IMessage<RequestCloseConnection> {
    private static readonly pb::MessageParser<RequestCloseConnection> _parser = new pb::MessageParser<RequestCloseConnection>(() => new RequestCloseConnection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestCloseConnection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayMessage.GatewayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCloseConnection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCloseConnection(RequestCloseConnection other) : this() {
      sessionId_ = other.sessionId_;
      serviceType_ = other.serviceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestCloseConnection Clone() {
      return new RequestCloseConnection(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private long sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "service_type" field.</summary>
    public const int ServiceTypeFieldNumber = 2;
    private string serviceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceType {
      get { return serviceType_; }
      set {
        serviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestCloseConnection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestCloseConnection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (ServiceType != other.ServiceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0L) hash ^= SessionId.GetHashCode();
      if (ServiceType.Length != 0) hash ^= ServiceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(SessionId);
      }
      if (ServiceType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0L) {
        size += 1 + 8;
      }
      if (ServiceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestCloseConnection other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0L) {
        SessionId = other.SessionId;
      }
      if (other.ServiceType.Length != 0) {
        ServiceType = other.ServiceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SessionId = input.ReadSFixed64();
            break;
          }
          case 18: {
            ServiceType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///1. 玩家新的消息
  ///2. 发送消息给玩家
  /// </summary>
  public sealed partial class NotifyNewMessage : pb::IMessage<NotifyNewMessage> {
    private static readonly pb::MessageParser<NotifyNewMessage> _parser = new pb::MessageParser<NotifyNewMessage>(() => new NotifyNewMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyNewMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayMessage.GatewayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewMessage(NotifyNewMessage other) : this() {
      sessionId_ = other.sessionId_;
      serviceType_ = other.serviceType_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewMessage Clone() {
      return new NotifyNewMessage(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private long sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "service_type" field.</summary>
    public const int ServiceTypeFieldNumber = 2;
    private string serviceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceType {
      get { return serviceType_; }
      set {
        serviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private pb::ByteString msg_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyNewMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyNewMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (ServiceType != other.ServiceType) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0L) hash ^= SessionId.GetHashCode();
      if (ServiceType.Length != 0) hash ^= ServiceType.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(SessionId);
      }
      if (ServiceType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceType);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0L) {
        size += 1 + 8;
      }
      if (ServiceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceType);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyNewMessage other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0L) {
        SessionId = other.SessionId;
      }
      if (other.ServiceType.Length != 0) {
        ServiceType = other.ServiceType;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SessionId = input.ReadSFixed64();
            break;
          }
          case 18: {
            ServiceType = input.ReadString();
            break;
          }
          case 26: {
            Msg = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestSendMessageToPlayer : pb::IMessage<RequestSendMessageToPlayer> {
    private static readonly pb::MessageParser<RequestSendMessageToPlayer> _parser = new pb::MessageParser<RequestSendMessageToPlayer>(() => new RequestSendMessageToPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestSendMessageToPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GatewayMessage.GatewayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSendMessageToPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSendMessageToPlayer(RequestSendMessageToPlayer other) : this() {
      sessionIds_ = other.sessionIds_.Clone();
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestSendMessageToPlayer Clone() {
      return new RequestSendMessageToPlayer(this);
    }

    /// <summary>Field number for the "session_ids" field.</summary>
    public const int SessionIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_sessionIds_codec
        = pb::FieldCodec.ForSFixed64(10);
    private readonly pbc::RepeatedField<long> sessionIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> SessionIds {
      get { return sessionIds_; }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private pb::ByteString msg_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestSendMessageToPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestSendMessageToPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessionIds_.Equals(other.sessionIds_)) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessionIds_.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sessionIds_.WriteTo(output, _repeated_sessionIds_codec);
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sessionIds_.CalculateSize(_repeated_sessionIds_codec);
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestSendMessageToPlayer other) {
      if (other == null) {
        return;
      }
      sessionIds_.Add(other.sessionIds_);
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            sessionIds_.AddEntriesFrom(input, _repeated_sessionIds_codec);
            break;
          }
          case 18: {
            Msg = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
